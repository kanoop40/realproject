const mongoose = require('mongoose');
const Messages = require('./models/MessagesModel');
const File = require('./models/FileModel');

const fixBrokenMessages = async () => {
    try {
        require('dotenv').config();
        await mongoose.connect(process.env.MONGO_URI);
        
        console.log('üîß Starting message repair process...');
        
        // ‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÄ‡∏™‡∏µ‡∏¢ (messageType: text ‡πÅ‡∏ï‡πà content ‡πÄ‡∏õ‡πá‡∏ô ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û/‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ô‡∏ö)
        const brokenMessages = await Messages.find({
            messageType: 'text',
            $or: [
                { content: '‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û' },
                { content: '‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ô‡∏ö' }
            ]
        });
        
        console.log(`üì® Found ${brokenMessages.length} broken messages`);
        
        // ‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏°‡∏µ Messages_id ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏™‡∏µ‡∏¢
        for (const message of brokenMessages) {
            console.log(`\nüîß Fixing message ${message._id}...`);
            
            // ‡∏´‡∏≤‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡πÇ‡∏¢‡∏á‡∏Å‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ô‡∏µ‡πâ
            const file = await File.findOne({ Messages_id: message._id });
            
            if (file) {
                console.log(`‚úÖ Found linked file: ${file.file_name}`);
                
                // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÉ‡∏´‡πâ‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏ü‡∏•‡πå
                const isImage = file.file_type && file.file_type.startsWith('image/');
                
                const updateData = {
                    messageType: isImage ? 'image' : 'file',
                    file_id: file._id,
                    fileUrl: file.url,
                    fileName: file.file_name,
                    fileSize: parseInt(file.size) || 0,
                    mimeType: file.file_type
                };
                
                await Messages.findByIdAndUpdate(message._id, updateData);
                
                console.log(`‚úÖ Updated message with:`, {
                    messageType: updateData.messageType,
                    fileName: updateData.fileName,
                    fileSize: updateData.fileSize
                });
            } else {
                console.log(`‚ùå No linked file found for message ${message._id}`);
            }
        }
        
        console.log('\nüéâ Message repair completed!');
        
        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
        const fixedMessages = await Messages.find({
            $or: [
                { content: '‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û' },
                { content: '‡πÑ‡∏ü‡∏•‡πå‡πÅ‡∏ô‡∏ö' }
            ]
        });
        
        console.log('\nüìä Final status:');
        fixedMessages.forEach(msg => {
            console.log(`  ${msg._id}: ${msg.content} -> ${msg.messageType} (${msg.fileName || 'no file'})`);
        });
        
        process.exit(0);
    } catch (error) {
        console.error('‚ùå Error:', error);
        process.exit(1);
    }
};

fixBrokenMessages();